name: CI

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow origin +refs/tags/*:refs/tags/*
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install setuptools_scm wheel

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: desmod-dist
        path: "dist/*"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -e . -r requirements.txt

    - name: Test
      run: |
        timeout 120s make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -e . -r requirements.txt
    - name: Lint
      run: |
        make lint

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -e . -r requirements.txt coveralls
    - name: Coverage
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        make coverage && coveralls

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download dist build
      uses: actions/download-artifact@v1
      with:
        name: desmod-dist
    - name: Print dists
      run: |
        ls desmod-dist/
    - name: Publish dists
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        packages_dir: desmod-dist
